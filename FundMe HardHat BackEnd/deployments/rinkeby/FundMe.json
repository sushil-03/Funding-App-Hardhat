{
  "address": "0xDEBC133be50e2402b7DCcaBE8cb57E0e18dC0034",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x034daacc01c15f97c3a03885369c2c1d0eded621a1d4f470d13ea3d0d587f2a3",
  "receipt": {
    "to": null,
    "from": "0xE70a341c9Bc69452F48a9F6345b3A55e4a6184db",
    "contractAddress": "0xDEBC133be50e2402b7DCcaBE8cb57E0e18dC0034",
    "transactionIndex": 14,
    "gasUsed": "790321",
    "logsBloom": "0x
    "blockHash": "0xa1693a28a03cf41068a4f19939de9d4bf883957d47b85eaf55b3c4ed53798b8c",
    "transactionHash": "0x034daacc01c15f97c3a03885369c2c1d0eded621a1d4f470d13ea3d0d587f2a3",
    "logs": [],
    "blockNumber": 11213910,
    "cumulativeGasUsed": "6901782",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 1,
  "solcInputHash": "abf5c15650bc110a52607a6a2a1420a6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"/*\\n    Aim\\n    1.Get fund from user\\n    2.Withdraw fund\\n    3.set a minimum funding value in USD\\n*/\\n//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\nimport \\\"./PriceConvertor.sol\\\";\\n\\n//Custom error are also way of reducing gas\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConvertor for uint256;\\n\\n    address[] public funders;\\n    address public immutable i_owner; //One time initialization\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(AggregatorV3Interface priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = priceFeedAddress;\\n    }\\n\\n    uint public constant MINIMUM_USD = 50 * 1e18; //Miniumum amount in usd\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversion(priceFeed) > MINIMUM_USD,\\n            \\\"Didn't send enough \\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function Withdraw() public onlyOwner {\\n        for (uint i = 0; i < funders.length; i++) {\\n            addressToAmountFunded[funders[i]] = 0;\\n        }\\n\\n        //Reset the array\\n        funders = new address[](0);\\n\\n        //Withdraw the fund\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Send failed\\\");\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender==i_owner,\\\"Sender is not owner\\\");\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _; //This represent doing rest of the code\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\\n/*  There are 3 ways to withdraw fund\\n        1.Transfer  transfer(2300 gas,throws error if get above)\\n        2.Send      send(2300 gas, return bool)\\n        3.Call      call(forward all gas or set gas,return bool)\\n    \\n        1 Transfer\\n        msg.sender is address type  to transfer fund we have to type cast in payable address\\n         payable(msg.sender).transfer(address(this).balance);\\n\\n        2.Send\\n         bool sendSuccess =  payable(msg.sender).send(address(this).balance);\\n         require(sendSuccess,\\\"Send failed\\\");\\n\\n        3.Call\\n        (bool callSuccess,)=payable(msg.sender).call{value:address(this).balance}(\\\"\\\");\\n        require(callSuccess,\\\"Send failed\\\");\\n*/\\n/*\\nWhat happen if someone send this contact ETH without calling the fund function?\\nSolution we will call fund function through receive and fallback\\n                Receive and Fallback\\n                    is msg.data empty?\\n                        /      \\\\\\n                     yes        no  \\n                receive()?     fallback()\\n                  /   \\\\\\n                yes   no\\n           receive()  fallback() \\n*/\\n\",\"keccak256\":\"0xaa28d560811e3e005898164a02000dc59756146ddc8e560a4d9652abd945796f\",\"license\":\"MIT\"},\"contracts/PriceConvertor.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.9;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConvertor {\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint)\\n    {\\n        //Address  0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\n        //ABI\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        return uint(price); //\\n    }\\n\\n    function getConversion(uint ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint)\\n    {\\n        uint ethPrice = getPrice(priceFeed);\\n        uint ethAmountInUSD = (ethPrice * ethAmount) / 1e8;\\n        return ethAmountInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0x8b011afdefc8fd26117c6fdeaa03b8d7f6915663824c3c0351b1f7cd63e996a1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610e57380380610e5783398181016040528101906100329190610122565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b60006100ef826100d2565b9050919050565b6100ff816100e4565b811461010a57600080fd5b50565b60008151905061011c816100f6565b92915050565b600060208284031215610138576101376100ad565b5b60006101468482850161010d565b91505092915050565b608051610ce6610171600039600081816102eb01526105580152610ce66000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633e47d6f31461008d57806357ea89b6146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af919061078b565b6102d1565b6040516100c191906107d1565b60405180910390f35b3480156100d657600080fd5b506100df6102e9565b005b3480156100ed57600080fd5b506100f6610523565b60405161010391906107d1565b60405180910390f35b34801561011857600080fd5b50610121610530565b60405161012e919061084b565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610556565b6040516101639190610875565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108bc565b61057a565b6040516101a09190610875565b60405180910390f35b6802b5e3af16b18800006101e8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b990919063ffffffff16565b11610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610946565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104135760006002600080848154811061039757610396610966565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061040b906109c4565b915050610371565b50600067ffffffffffffffff81111561042f5761042e610a0d565b5b60405190808252806020026020018201604052801561045d5781602001602082028036833780820191505090505b5060009080519060200190610473929190610681565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049a90610a6d565b60006040518083038185875af1925050503d80600081146104d7576040519150601f19603f3d011682016040523d82523d6000602084013e6104dc565b606091505b5050905080610520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051790610ace565b60405180910390fd5b50565b6802b5e3af16b188000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c5836105f1565b905060006305f5e10085836105da9190610aee565b6105e49190610b77565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063a57600080fd5b505afa15801561064e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106729190610c35565b50505091505080915050919050565b8280548282559060005260206000209081019282156106fa579160200282015b828111156106f95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106a1565b5b509050610707919061070b565b5090565b5b8082111561072457600081600090555060010161070c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107588261072d565b9050919050565b6107688161074d565b811461077357600080fd5b50565b6000813590506107858161075f565b92915050565b6000602082840312156107a1576107a0610728565b5b60006107af84828501610776565b91505092915050565b6000819050919050565b6107cb816107b8565b82525050565b60006020820190506107e660008301846107c2565b92915050565b6000819050919050565b600061081161080c6108078461072d565b6107ec565b61072d565b9050919050565b6000610823826107f6565b9050919050565b600061083582610818565b9050919050565b6108458161082a565b82525050565b6000602082019050610860600083018461083c565b92915050565b61086f8161074d565b82525050565b600060208201905061088a6000830184610866565b92915050565b610899816107b8565b81146108a457600080fd5b50565b6000813590506108b681610890565b92915050565b6000602082840312156108d2576108d1610728565b5b60006108e0848285016108a7565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682000000000000000000000000000600082015250565b60006109306013836108e9565b915061093b826108fa565b602082019050919050565b6000602082019050818103600083015261095f81610923565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109cf826107b8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0257610a01610995565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a57600083610a3c565b9150610a6282610a47565b600082019050919050565b6000610a7882610a4a565b9150819050919050565b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ab8600b836108e9565b9150610ac382610a82565b602082019050919050565b60006020820190508181036000830152610ae781610aab565b9050919050565b6000610af9826107b8565b9150610b04836107b8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3d57610b3c610995565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b82826107b8565b9150610b8d836107b8565b925082610b9d57610b9c610b48565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bc781610ba8565b8114610bd257600080fd5b50565b600081519050610be481610bbe565b92915050565b6000819050919050565b610bfd81610bea565b8114610c0857600080fd5b50565b600081519050610c1a81610bf4565b92915050565b600081519050610c2f81610890565b92915050565b600080600080600060a08688031215610c5157610c50610728565b5b6000610c5f88828901610bd5565b9550506020610c7088828901610c0b565b9450506040610c8188828901610c20565b9350506060610c9288828901610c20565b9250506080610ca388828901610bd5565b915050929550929590935056fea26469706673582212204ec0b038058f3d0caf328fa9da4dcdee9e53f16944a50513ae3b7546df82de2764736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633e47d6f31461008d57806357ea89b6146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af919061078b565b6102d1565b6040516100c191906107d1565b60405180910390f35b3480156100d657600080fd5b506100df6102e9565b005b3480156100ed57600080fd5b506100f6610523565b60405161010391906107d1565b60405180910390f35b34801561011857600080fd5b50610121610530565b60405161012e919061084b565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610156610556565b6040516101639190610875565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e91906108bc565b61057a565b6040516101a09190610875565b60405180910390f35b6802b5e3af16b18800006101e8600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346105b990919063ffffffff16565b11610228576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021f90610946565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60026020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036e576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104135760006002600080848154811061039757610396610966565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061040b906109c4565b915050610371565b50600067ffffffffffffffff81111561042f5761042e610a0d565b5b60405190808252806020026020018201604052801561045d5781602001602082028036833780820191505090505b5060009080519060200190610473929190610681565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049a90610a6d565b60006040518083038185875af1925050503d80600081146104d7576040519150601f19603f3d011682016040523d82523d6000602084013e6104dc565b606091505b5050905080610520576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051790610ace565b60405180910390fd5b50565b6802b5e3af16b188000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061058a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105c5836105f1565b905060006305f5e10085836105da9190610aee565b6105e49190610b77565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561063a57600080fd5b505afa15801561064e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106729190610c35565b50505091505080915050919050565b8280548282559060005260206000209081019282156106fa579160200282015b828111156106f95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906106a1565b5b509050610707919061070b565b5090565b5b8082111561072457600081600090555060010161070c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107588261072d565b9050919050565b6107688161074d565b811461077357600080fd5b50565b6000813590506107858161075f565b92915050565b6000602082840312156107a1576107a0610728565b5b60006107af84828501610776565b91505092915050565b6000819050919050565b6107cb816107b8565b82525050565b60006020820190506107e660008301846107c2565b92915050565b6000819050919050565b600061081161080c6108078461072d565b6107ec565b61072d565b9050919050565b6000610823826107f6565b9050919050565b600061083582610818565b9050919050565b6108458161082a565b82525050565b6000602082019050610860600083018461083c565b92915050565b61086f8161074d565b82525050565b600060208201905061088a6000830184610866565b92915050565b610899816107b8565b81146108a457600080fd5b50565b6000813590506108b681610890565b92915050565b6000602082840312156108d2576108d1610728565b5b60006108e0848285016108a7565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567682000000000000000000000000000600082015250565b60006109306013836108e9565b915061093b826108fa565b602082019050919050565b6000602082019050818103600083015261095f81610923565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109cf826107b8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610a0257610a01610995565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a57600083610a3c565b9150610a6282610a47565b600082019050919050565b6000610a7882610a4a565b9150819050919050565b7f53656e64206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ab8600b836108e9565b9150610ac382610a82565b602082019050919050565b60006020820190508181036000830152610ae781610aab565b9050919050565b6000610af9826107b8565b9150610b04836107b8565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b3d57610b3c610995565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b82826107b8565b9150610b8d836107b8565b925082610b9d57610b9c610b48565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bc781610ba8565b8114610bd257600080fd5b50565b600081519050610be481610bbe565b92915050565b6000819050919050565b610bfd81610bea565b8114610c0857600080fd5b50565b600081519050610c1a81610bf4565b92915050565b600081519050610c2f81610890565b92915050565b600080600080600060a08688031215610c5157610c50610728565b5b6000610c5f88828901610bd5565b9550506020610c7088828901610c0b565b9450506040610c8188828901610c20565b9350506060610c9288828901610c20565b9250506080610ca388828901610bd5565b915050929550929590935056fea26469706673582212204ec0b038058f3d0caf328fa9da4dcdee9e53f16944a50513ae3b7546df82de2764736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 319,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 324,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)102"
      },
      {
        "astId": 349,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)102": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}